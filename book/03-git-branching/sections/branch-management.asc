[[_branch_management]]
=== Gerenciamento de Ramificações

(((ramificação, gerenciamento)))
Agora que você cirou, fundiu, e deletou algumas ramificações, vamos olhar para algumas ferramentas de gerenciamento de ramificações, que serão úteis quando você começar a usar ramificações.

O comando `git branch` faz mais do que simplesmente criar e deletar ramificações.(((comandos git, branch)))
Caso você o execute sem argumentos, você simplesmente receberá uma listagem das ramificações atuais:

[source,console]
----
$ git branch
  iss53
* master
  testing
----

Perceba que o caracterer `*` que prefixa a ramificação `master`: ele indica que a ramificação que você está selecionada no momento (i.e., a ramificação que o ponteiro `HEAD` aponta).
Isso significa que se você submeter neste ponto, a ramificação `master` será movida para frente juntamente com seu trabalho.
Para ver a última submissão de cada ramificação, você pode executar o comando `git branch -v`:

[source,console]
----
$ git branch -v
  iss53   93b412c fix javascript issue
* master  7a98805 Merge branch 'iss53'
  testing 782fd34 add scott to the author list in the readmes
----

A utilidade das opções `--merged` e `--no-merged` podem filtrar essa lista pra ramificações que você tenha ou não feito fusão para a ramificação que você está selecionado atualmente.
Para ver quais ramificações você já fundiu com aquela ramificação atualmente selecionada, você pode executar `git branch --merged`:

[source,console]
----
$ git branch --merged
  iss53
* master
----

Porque você já fundiu a `iss53` anteriormente, você a vê na lista. As ramfiicações nesta lista sem o `*` à frente delas são passíveis de remoção com o `git branch -d`; você já incorporou o trabalho deles em outra ramificação, então você não vai perder nada.

Para ver todas ramificações que contém trabalho, que você ainda não fundiu, você pode executar `git branch --no-merged`:

[source,console]
----
$ git branch --no-merged
  testing
----

Isso mostra sua outra ramificação.
Porque ela contém trabalho que ainda não foi fundido, tentar deletá-la com o `git branch -d` causará uma falha:

[source,console]
----
$ git branch -d testing
error: The branch 'testing' is not fully merged.
If you are sure you want to delete it, run 'git branch -D testing'.
----

Caso você realmente queira deletar uma ramificação e perder aquele trabalho, você pode forçar isso com a opção `-D`, como a mensagem útil do Git nos mostra.
